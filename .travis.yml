---
language: python
python: "2.7"

# We need sudo for some of the Docker commands.
sudo: required

# Environment variables for the containers' use
env:
  - docker_image: python:2.7.13-jessie # So we can download the proper Docker image
    init: /lib/systemd/systemd # So we can use systemd in our container
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" # So we can use systemd in our container

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull image from Docker Hub.
  - docker pull ${docker_image}

script:
  # Create a random file to store the container ID.
  - 'container_id=$(mktemp)'

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/airflow-role ${run_opts} ${docker_image} "${init}" > "${container_id}"'

  # Install Ansible inside the container
  - >
    docker exec --tty "$(cat ${container_id})" pip install ansible==2.3.1.0

  # Install Testinfra inside the container
  - >
    docker exec --tty "$(cat ${container_id})" pip install testinfra==1.5.5

  # Install sudo inside the container
  - 'docker exec --tty "$(cat ${container_id})" apt update'
  - 'docker exec --tty "$(cat ${container_id})" apt install sudo'

  # Check the role/playbook's syntax.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook -i /etc/ansible/roles/airflow-role/tests/travis/inventory
    /etc/ansible/roles/airflow-role/tests/travis_test.yml
    --syntax-check

  # Run the role/playbook with ansible-playbook.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook -i /etc/ansible/roles/airflow-role/tests/travis/inventory
    /etc/ansible/roles/airflow-role/tests/travis_test.yml

  # Run the role/playbook again, checking to make sure it's idempotent.
  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook -i /etc/ansible/roles/airflow-role/tests/travis/inventory
    /etc/ansible/roles/airflow-role/tests/travis_test.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Run Testinfra tests
  - >
    docker exec --tty "$(cat ${container_id})" bash -c
    'env TERM=xterm;
    cd /etc/ansible/roles/airflow-role;
    testinfra tests/test_ansible.py
    --connection=ansible
    --ansible-inventory=tests/travis/inventory'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
